//yfb smalljscode 1.0.0.0 http://www.yinyue200.com/zh-cn/appList/yfxsrt/yfbfiles.aspx
//packagename:remen2019
//authorname:Jack Lee
//copyright:(c) 2020 Jack Lee
//usingnamespace:HtmlAgilityPackRT
//supporturl:^https?://www\.(remen2019|remenxs|rmxs8)\.com(/|$)
//searchname:remen2019
//feedbackurl:mailto:Jack-Lee92@outlook.com
//onAddonCenter:1
//version:1.0.0.13
//minreaderversion:1.3.133.0
//end
//packagename必须是唯一的
//可以多次声明searchname,使用$分隔，这样阅读器就会多次调用getSiteSearchUri。也可以不声明，这样表示不支持搜索，只能使用网站解析功能。packagename需要在全软件内唯一。packagename应该可以作为文件夹的名称使用.usingnamespace代表引用的命名空间，多个命名空间用空格“ ”分隔。supporturl是支持网站的正则表达式，若不符合该表达式阅读器将不会调用该插件。也可以置空。但为了性能考虑，不要置空;minreaderversion表示最低阅读器版本
String.prototype.Trim = function() 
{ 
return this.replace(/(^\s*)|(\s*$)/g, ""); 
} 
String.prototype.LTrim = function() 
{ 
return this.replace(/(^\s*)/g, ""); 
} 
String.prototype.RTrim = function() 
{ 
return this.replace(/(\s*$)/g, ""); 
}
var ls=[];
var pos=1;
var lks={};
var WebSiteEngine = {
    createNew: function(nowurl,starturl){
        var temp = {};
        temp.siteName = "remen2019"
        temp.getChapterContent = function (html) {
            var hd = new HtmlAgilityPackRT.HtmlDocument();
            hd.loadHtml(html);
			var ht="";
			var aaa=hd.documentNode.selectSingleNode("//div[@class='content']");
			if(aaa==null)
			{
				aaa=hd.documentNode.selectSingleNode("//div[@id='content']");
				ht=aaa.innerHtml;
			}
			else{
				ht=aaa.innerHtml;
			    var pindex = ht.indexOf("<p>");
				if (pindex != -1) {
					ht = ht.substr(0, pindex);
				}
			}
            ht = ht.replace(/&nbsp;&nbsp;&nbsp;&nbsp;您可以在百度里搜索“.+ 新?热门小说网\((https?:\/\/)?www\.(remen2019|remenxs|rmxs8)\.com\)”查找最新章节！<br\s*\/?>/, "");
			ht = ht.replace(/<p\s*\/?>喜欢.+请大家收藏：\(www\.(remen2019|remenxs|rmxs8)\.com\).+新?热门小说网更新速度最快。<\/?p\s*\/?>/, "");
            return HtmlAgilityPackRT.YFHelper.contentDecoding(ht)//根据参数html返回章节内容
        }
        temp.getChapterList=function(html){
            //根据参数html返回章节列表，以\r\n分隔
            //例如
            var hd = new HtmlAgilityPackRT.HtmlDocument();
            hd.loadHtml(html);
			lks=[];
			var tlks=hd.documentNode.selectNodes("//div[@id='pagelink']/a");
			if(tlks===null||tlks.length==0){
				var parnode = hd.documentNode.selectNodes("//div[@id='list']//a");
				if(parnode===null||parnode.length==0){
					return HtmlAgilityPackRT.YFHelper.helpForeachNodes(hd.documentNode.selectNodes("//div[@id and @class='novel_list']//a"),nowurl);
				}
				else{
					return HtmlAgilityPackRT.YFHelper.helpForeachNodes(parnode,nowurl);
				}
			}
			else
			{
				for(var i=0;i<tlks.length;i++){
					var tlk=HtmlAgilityPackRT.YFHelper.formAturl(HtmlAgilityPackRT.YFHelper.htmlDecode(tlks[i].attributes.getAttribute("href").value),nowurl)
					if(lks.indexOf(tlk)==-1){
						lks.push(tlk)
					}
				}
			}

			pos=1;
			ls=[];
			ls.push(HtmlAgilityPackRT.YFHelper.helpForeachNodes(hd.documentNode.selectNodes("//div[@id and @class='novel_list']//a"),nowurl))
			if(lks.length>1){
				throw {helpLink:lks[pos],type:"reset"}
			}
			else{
				return ls[0];
			}
        }
		temp.getChapterListRESET=function(html,nowurl){
            //根据参数html返回章节列表，以\r\n分隔
            //例如
            var hd = new HtmlAgilityPackRT.HtmlDocument();
            hd.loadHtml(html);
			ls.push(HtmlAgilityPackRT.YFHelper.helpForeachNodes(hd.documentNode.selectNodes("//div[@id and @class='novel_list']//a"),nowurl))
			pos++;
			if(pos>lks.length-1){
				var kl="";
				var vl=""
				for(var i=0;i<ls.length;i++){
					kl+=ls[i].key;
					vl+=ls[i].value;
				}
				return {key:kl,value:vl}
			}
			else{
				throw {helpLink:lks[pos],type:"reset"}
			}
        }
        temp.getBookInfo=function(html){
            //根据参数html返回书籍简介
            var hd = new HtmlAgilityPackRT.HtmlDocument();
            hd.loadHtml(html);
			var auther=hd.documentNode.selectSingleNode("//meta[@property='og:novel:author']").attributes.getAttribute("content").value;
            var vl= { name: HtmlAgilityPackRT.YFHelper.htmlDecode(hd.documentNode.selectSingleNode("//meta[@property='og:title']").attributes.getAttribute("content").value), infotext:HtmlAgilityPackRT.YFHelper.zy(hd.documentNode.selectSingleNode("//meta[@property='og:description']").attributes.getAttribute("content").value), authorName: HtmlAgilityPackRT.YFHelper.htmlDecode(auther) };
			try{vl.bookImagePath=HtmlAgilityPackRT.YFHelper.htmlDecode(hd.documentNode.selectSingleNode("//meta[@property='og:image']").attributes.getAttribute("content").value);}catch(e){vl.bookImagePath=""}
			return vl;
        }
        temp.getSiteSearchUri=function(searchcontent,searchpoint){
            return {name:"https://www.rmxs8.com/search.html",value:HtmlAgilityPackRT.YFHelper.convertStringToBase64("searchtype=all&searchkey="+encodeURIComponent(searchcontent))};
        }
		temp.getBookListFormSiteSearch=function(htmlcontent,searchcontent){
			var hd = new HtmlAgilityPackRT.HtmlDocument();
            hd.loadHtml(htmlcontent);
			var fresh=hd.documentNode.selectSingleNode("//meta[@http-equiv='refresh']");
			var list=[];
			if(fresh!==null){
				var textss=fresh.attributes.getAttribute("content").value;
				var index=textss.indexOf(";url=")+5;
				list.push({ name: searchcontent, path: HtmlAgilityPackRT.YFHelper.formAturl(textss.substring(index),nowurl), info: "" });
				return list;
			}
			
			var list1=hd.documentNode.selectNodes("//div[@id='main']//div[@class='novelslist2']//ul/li");
			if(list1!=null)
			{
				for(var i=0;i<list1.length;i++){
				try{
					var s2=list1[i].selectSingleNode("span[@class='s2']");
					var s1=list1[i].selectSingleNode("span[@class='s1']");
					var s3=list1[i].selectSingleNode("span[@class='s3']");
					var s4=list1[i].selectSingleNode("span[@class='s4']");
					var s5=list1[i].selectSingleNode("span[@class='s5']");
					var s6=list1[i].selectSingleNode("span[@class='s6']");

					list.push({ name: s2.innerText, path: HtmlAgilityPackRT.YFHelper.formAturl(s2.selectSingleNode("a").attributes.getAttribute("href").value,nowurl), info: s1.innerText+" "+s3.innerText+" "+s4.innerText+" "+s5.innerText+" "+s6.innerText });
				}
                catch (err) { ;}
				}
			}
			else{
			var list2=hd.documentNode.selectNodes("//div[@id='sitembox']//dl");
			for(var i=0;i<list2.length;i++){
				try{
					var s2=list2[i].selectSingleNode(".//h3");
					var s1=list2[i].selectSingleNode("./dd[@class='book_other']");
					var s3=list2[i].selectSingleNode("./dd[@class='book_des']");
					var s4=list2[i].selectSingleNode("./dd[@class='book_other']");

					list.push({ name: s2.innerText, path: HtmlAgilityPackRT.YFHelper.formAturl(s2.selectSingleNode("a").attributes.getAttribute("href").value,nowurl), info: s1.innerText+" "+s3.innerText+" "+s4.innerText });
				}
                catch (err) { ;}
			}
			}
			return list;
            //return new Array({ name: '小说1名字', path: "链接", info: "概览" }, { name: '小说2名字', path: "链接", info: "概览" },{name:'小说3名字',path:"链接",info:"概览"});//示例
            //这里给出的小说地址在用户点击项目后将通过isChapterListPage函数，若该函数返回true，将直接进入书籍简介页引发getBookInfo函数，若返回false，将访问地址获取可能的重定向(来自重定向请求或者getNewUriToGo函数)来重新isChapterListPage
        }
        temp.isChapterListPage=function(){//可选，默认返回true
            return true;
        }
        temp.getNewUriToGo=function(htmlcontent){//可选，返回NULL即不需要重定向
            return null; //重定向的新URL
        }
        temp.getChapterContentWithContext=function(htmlcontent,context){//可选
            return "小说内容";
        }
        temp.isSupport=function(){//可选，指示当前URL是否是支持的URL，若不支持，阅读器可能会使用其它解析程序来解析内容
            return true;
        }
        return temp;
    }
};