//yfb smalljscode 1.0.0.0 http://www.yinyue200.com/zh-cn/appList/yfxsrt/yfbfiles.aspx
//packagename:quanben.com
//authorname:Jack Lee
//copyright:© 2020 Jack Lee
//usingnamespace:HtmlAgilityPackRT
//supporturl:^http://www.quanben.com/
//searchname:quanben.com
//feedbackurl:mailto:Jack-Lee92@outlook.com
//minreaderversion:1.3.0.0
//version:1.0.0.2
//end
//packagename必须是唯一的
//可以多次声明searchname,使用$分隔，这样阅读器就会多次调用getSiteSearchUri。也可以不声明，这样表示不支持搜索，只能使用网站解析功能。packagename需要在全软件内唯一。packagename应该可以作为文件夹的名称使用.usingnamespace代表引用的命名空间，多个命名空间用空格“ ”分隔。supporturl是支持网站的正则表达式，若不符合该表达式阅读器将不会调用该插件。也可以置空。但为了性能考虑，不要置空;minreaderversion表示最低阅读器版本
var WebSiteEngine = {
    createNew: function (nowurl, starturl) {
        var temp = {};
        temp.siteName = "quanben.com"
        temp.getChapterContent = function (html) {
            var hd = new HtmlAgilityPackRT.HtmlDocument();
            hd.loadHtml(html);
            var contentNode = hd.getElementbyId("htmlContent");
            var removeNodes = contentNode.selectNodes("div");
            for(var i = 0; i< removeNodes.length;i++)
            {
                removeNodes[i].remove();
            }
            return HtmlAgilityPackRT.YFHelper.contentDecoding(hd.getElementbyId("htmlContent").innerHtml);//根据参数html返回章节内容
            //可能会抛出的错误
            throw { type: "", innerException: obj/*可选*/, displaymessage: obj/*可选，该属性会向用户显示,且如果提供displaymessage属性，将替换默认的错误提示*/, context: ""/*可选，重定向时可能要记录的信息，将在新页面中附带该信息在getChapterContentWithContext的context参数中*/, helpLink: ""/*可选，重定向地址，与type:"RESET"配合重定向*/ }
            //可用的type值
            // 该章节是图片章节，目前不支持解析
            //"GIF",
            //解析失败
            //"JIEXI"
            // 需要支付，但当前不支持
            //"PAY"
            // 需要转到新的网址获取数据
            //"RESET"
        }
        temp.getChapterList = function (html) {
            //根据参数html返回章节列表，以\r\n分隔
            //例如
            var hd = new HtmlAgilityPackRT.HtmlDocument();
            hd.loadHtml(html);
            return HtmlAgilityPackRT.YFHelper.helpForeachNodes(hd.documentNode.selectNodes("//ul[@class='mulu_list']//a"), nowurl)
        }
        temp.getBookInfo = function (html) {
            //根据参数html返回书籍简介
            var hd = new HtmlAgilityPackRT.HtmlDocument();
            hd.loadHtml(html);
            var title = hd.documentNode.selectSingleNode("//meta[@property='og:novel:book_name']").getAttributeValue("content", "");
            var author = hd.documentNode.selectSingleNode("//meta[@property='og:novel:author']").getAttributeValue("content", "");
            var image = hd.documentNode.selectSingleNode("//meta[@property='og:image']").getAttributeValue("content", "");
            return { name: title, bookImagePath: image, authorName: author,infotext:"" }
        }
        temp.getSiteSearchUri = function (searchcontent, searchpoint) {
            var uri = "http://www.quanben.com/modules/article/search.php?entry=1&searchkey="+HtmlAgilityPackRT.YFHelper.urlEncodeWithCodePage(searchcontent,936);
            return { name: uri };
        }
        temp.getBookListFormSiteSearch = function (htmlcontent) {			
            if (nowurl.startsWith("http://www.quanben.com/xiazai/")) {
				var str1="var articlename='";
				var str2=htmlcontent.substr(htmlcontent.indexOf(str1)+str1.length);
                var title = str2.substr(0,str2.indexOf("'"));
                //var author = hd.documentNode.selectSingleNode("//meta[@property='og:novel:author']").getAttributeValue("content", "");
                //var image = hd.documentNode.selectSingleNode("//meta[@property='og:image']").getAttributeValue("content", "");
                return new Array({ name: title, path: nowurl,info:"" });
            }
			var hd = new HtmlAgilityPackRT.HtmlDocument();
            hd.loadHtml(htmlcontent);
            var info = hd.documentNode.selectNodes("//ul[@class='info']");
			if(info==null&&nowurl==starturl){
				var str1="var articlename='";
				var str2=htmlcontent.substr(htmlcontent.indexOf(str1)+str1.length);
                var title = str2.substr(0,str2.indexOf("'"));
                //var author = hd.documentNode.selectSingleNode("//meta[@property='og:novel:author']").getAttributeValue("content", "");
                //var image = hd.documentNode.selectSingleNode("//meta[@property='og:image']").getAttributeValue("content", "");
                return new Array({ name: title, path: nowurl,info:"" });
			}
            var result = new Array();
            for (var i = 0; i < info.length; i++) {
                var node = info[i];
                var picANode = node.selectSingleNode("a");
                var picNode = picANode.selectSingleNode(".//img");
                var infoNode = node.selectSingleNode("li[last()]");
                result.push({ name: picNode.getAttributeValue("alt", ""), path: picANode.getAttributeValue("href", ""), info: infoNode.innerText });
            }
            return result;
            //这里给出的小说地址在用户点击项目后将通过isChapterListPage函数，若该函数返回true，将直接进入书籍简介页引发getBookInfo函数，若返回false，将访问地址获取可能的重定向(来自重定向请求或者getNewUriToGo函数)来重新isChapterListPage
        }
        temp.isChapterListPage = function () {//可选，默认返回true
            return nowurl.includes("xiaoshuo");
        }
        temp.getNewUriToGo = function (htmlcontent) {//可选，返回NULL即不需要重定向
            if (nowurl.startsWith("http://m."))
                return nowurl.replace("http://m.", "http://www.");
            if (nowurl.includes("xiazai"))
                return nowurl.replace("xiazai", "xiaoshuo"); //重定向的新URL
            return null;
        }
        temp.getChapterContentWithContext = function (htmlcontent, context) {//可选
            return "小说内容";
        }
        temp.isSupport = function () {//可选，指示当前URL是否是支持的URL，若不支持，阅读器可能会使用其它解析程序来解析内容
            return true;
        }
        return temp;
    }
};